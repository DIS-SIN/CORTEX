apiVersion: "apps/v1beta1"
kind: StatefulSet
metadata:
  name: neo4j-core
spec:
  updateStrategy:
    type: "RollingUpdate"
  serviceName: neo4j-core-service
  replicas: 3
  template:
    metadata:
      labels:
        app: neo4j
        component: core
    spec:
      containers:
      - name: neo4j
        image: "morocode/neo4j:3.5.6-enterprise"
        imagePullPolicy: "IfNotPresent"
        env:
          - name: NEO4J_dbms_security_procedures_unrestricted
            value: algo.*,apoc.*
          - name: NEO4J_dbms_mode
            value: CORE
          - name: NUMBER_OF_CORES
            value: "3"
          - name: NEO4J_dbms_security_auth__enabled
            value: "true"
          - name: NEO4J_causal__clustering_discovery__type
            value: DNS
          - name: NEO4J_causal__clustering_initial__discovery__members
            value: "neo4j-core-service.jotunheimr.svc.cluster.local:5000"
          - name: NEO4J_ACCEPT_LICENSE_AGREEMENT
            value: "yes"
          - name: NEO4J_apoc_import_file_enabled
            value: "true"
          - name: NEO4j_AUTH
            valueFrom:
              secretKeyRef:
                name: neo4jsecrets
                key: neo4jauth
        command:
          - "/bin/bash"
          - "-ecx"
          - |
            export NEO4J_dbms_connectors_default__advertised__address=$(hostname -f)
            export NEO4J_causal__clustering_discovery__advertised__address=$(hostname -f):5000
            export NEO4J_causal__clustering_transaction__advertised__address=$(hostname -f):6000
            export NEO4J_causal__clustering_raft__advertised__address=$(hostname -f):7000
            exec /docker-entrypoint.sh "neo4j"
        ports:
        - containerPort: 5000
          name: discovery
        - containerPort: 7000
          name: raft
        - containerPort: 6000
          name: tx
        - containerPort: 7474
          name: browser
        - containerPort: 7687
          name: bolt
        - containerPort: 6362
          name: backup
        securityContext:
          privileged: true
        volumeMounts:
        - name: neo4jstorage
          mountPath: "/data"
  volumeClaimTemplates:
    - metadata:
        name: neo4jstorage
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: "gp2"
        resources:
          requests:
            storage: "100Gi"
